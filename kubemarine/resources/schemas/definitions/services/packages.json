{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "description": "Section for packages and their management",
  "allOf": [{"$ref": "#/definitions/CustomPackages"}],
  "properties": {
    "package_manager": {
      "type": "object",
      "description": "Additional package manager repositories for the cluster in closed environment",
      "properties": {
        "replace-repositories": {
          "type": "boolean",
          "default": false,
          "description": "Deletes old repositories on hosts and installs new ones instead"
        },
        "repositories": {
          "description": "List of new repositories. Can be specified as path to the file containing repositories, or as list for apt repositories, or as dictionary for yum repositories.",
          "oneOf": [
            {"type": "string"},
            {"$ref": "#/definitions/YumRepositories"},
            {"$ref": "#/definitions/AptRepositories"}
          ]
        }
      },
      "additionalProperties": false
    },
    "mandatory": {
      "type": "object",
      "description": "Specify whether to install or skip mandatory packages",
      "properties": {
        "conntrack": {"type": "boolean", "default": true},
        "iptables": {"type": "boolean", "default": true},
        "openssl": {"type": "boolean", "default": true},
        "curl": {"type": "boolean", "default": true},
        "unzip": {"type": "boolean", "default": true},
        "semanage": {"type": "boolean", "default": true},
        "kmod": {"type": "boolean", "default": true}
      },
      "additionalProperties": false
    },
    "associations": {
      "$ref": "packages/associations.json",
      "description": "Configure predefined associations of package objects. If configured in the common section, the associations are automatically switched to the section corresponding to your operating system."
    },
    "cache_versions": {
      "type": "boolean",
      "default": true,
      "description": "Specifies whether to install exactly the same package versions from associations section during the add_node procedure"
    }
  },
  "propertyNames": {
    "anyOf": [
      {"$ref": "#/definitions/CustomPackagesPropertyNames"},
      {"enum": ["package_manager", "mandatory", "associations", "cache_versions"]}
    ]
  },
  "definitions": {
    "CustomPackages": {
      "properties": {
        "install": {
          "description": "List of custom packages to install. Can be specified as list or as two lists that are to be included and excluded during processing.",
          "oneOf": [
            {
              "type": "object",
              "allOf": [{"$ref": "#/definitions/IncludeExcludeProperties"}],
              "required": ["include"],
              "propertyNames": {
                "$ref": "#/definitions/IncludeExcludePropertyNames"
              }
            },
            {
              "$ref": "../common/utils.json#/definitions/MergeableSetOfStrings"
            }
          ]
        },
        "upgrade": {
          "description": "List of custom packages to upgrade. Can be specified as list or as two lists that are to be included and excluded during processing.",
          "oneOf": [
            {"$ref": "#/definitions/IncludeExcludePermissive"},
            {"$ref": "../common/utils.json#/definitions/MergeableSetOfStrings"}
          ]
        },
        "remove": {
          "description": "List of custom packages to remove. Can be specified as list or as two lists that are to be included and excluded during processing.",
          "oneOf": [
            {"$ref": "#/definitions/IncludeExcludePermissive"},
            {"$ref": "../common/utils.json#/definitions/MergeableSetOfStrings"}
          ]
        }
      }
    },
    "CustomPackagesPropertyNames": {
      "enum": ["install", "upgrade", "remove"]
    },
    "YumRepositories": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "enabled": {"type": "integer"},
          "gpgcheck": {"type": "integer"},
          "baseurl": {"type": "string"}
        }
      }
    },
    "AptRepositories": {
      "$ref": "../common/utils.json#/definitions/NonEmptySetOfStrings"
    },
    "IncludeExcludePermissive": {
      "type": "object",
      "allOf": [{"$ref": "#/definitions/IncludeExcludeProperties"}],
      "minProperties": 1,
      "propertyNames": {
        "$ref": "#/definitions/IncludeExcludePropertyNames"
      }
    },
    "IncludeExcludeProperties": {
      "properties": {
        "include": {
          "$ref": "../common/utils.json#/definitions/MergeableSetOfStrings",
          "description": "List of packages to include in processing. Type of processing is defined by parent section."
        },
        "exclude": {
          "$ref": "../common/utils.json#/definitions/MergeableSetOfStrings",
          "description": "List of packages to exclude from processing. Type of processing is defined by parent section."
        }
      }
    },
    "IncludeExcludePropertyNames": {
      "enum": ["include", "exclude"]
    }
  }
}

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version", "readme"]
name = "kubemarine"
description = "Management tool for Kubernetes cluster deployment and maintenance"
authors = [
    {name = "Kubemarine Group", email = "kubemarinegroup@netcracker.com"},
]
license = {text = "Apache-2.0"}
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
]
keywords = ["kubernetes", "devops", "administration", "helm"]
dependencies = [
    "PyYAML==6.0",
    "deepmerge==1.0.*",
    "fabric==2.6.*",
    "jinja2==3.1.*",
    "MarkupSafe==2.1.*",
    "invoke==1.6.*",
    "ruamel.yaml==0.17.22",
    "pygelf==0.4.*",
    "toml==0.10.*",
    "python-dateutil==2.8.*",
    "deepdiff==6.2.*",
    "ordered-set==4.1.*",
    # cryptography is a transitive dependency of paramiko. Fix version to avoid unexpected deprecation warnings.
    "cryptography==39.0.*",
    "paramiko==2.11.*",
    "jsonschema==4.17.*",
    "typing_extensions==4.7.*",
    "pathvalidate==3.2.*"
]
requires-python = ">=3.7"

[project.optional-dependencies]
ansible = ["ansible==7.0.*"]
mypy = [
    "mypy==1.3.*",
    "types-PyYAML==6.*",
    "types-invoke==1.*",
    "types-toml==0.*",
    "types-python-dateutil==2.*",
    "types-paramiko==2.*",
    "types-jsonschema==4.*",
]

# Auxiliary executable roughly equivalent to python -m kubemarine
# Allows to not worry about exact path to python executable on the client machine
# Should still no be called directly as it does not ensure necessary environment variables.
# Real executables are installed by setup.py
[project.scripts]
_kubemarine = "kubemarine.__main__:main"

[project.urls]
Homepage = "https://github.com/Netcracker/KubeMarine"
Documentation = "https://github.com/Netcracker/KubeMarine#documentation"
Issues = "https://github.com/Netcracker/KubeMarine/issues/"

# To change version with automatic push and triggering of the release workflow use
# 1. pip install bumpver
# 2. bumpver update --set-version <new version>
[tool.bumpver]
current_version = "v0.23.0"
version_pattern = "vMAJOR.MINOR.PATCH"
commit_message = "bump version to {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"kubemarine/version" = [
    '^{version}$'
]

[tool.mypy]
files = ["kubemarine", "scripts"]

# various configuration and code checks
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

# strict typing checks
check_untyped_defs = true
strict_equality = true
strict_concatenate = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
warn_return_any = true

# permissive configuration
implicit_optional = true

# https://github.com/python/mypy/issues/12664
incremental = false

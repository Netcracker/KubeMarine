#
#cluster_id: "k8s-staging4"
cluster_name: "k8s-staging4.k8s.sdntest.netcracker.com"

node_defaults:
  username: centos
  keyfile: "/home/nat/.ssh/paas-apps-staging-am-extractor_id_rsa"

nodes:
#- address: 10.102.1.82
#  internal_address: 192.168.101.16
#  name: k8s-staging4-balancer-1-1
#  roles:
#  - balancer
- address: 10.102.1.82
  internal_address: 192.168.101.16
  name: k8s-staging4-worker-1-1
  roles:
  - worker
- address: 10.102.2.246
  internal_address: 192.168.101.13
  labels:
    region: master
    route-reflector: true
  name: k8s-staging4-master-1-1
  roles:
  - master
  - worker

#imageRepository: artifactorycn.netcracker.com:17099

services:
  kubeadm:
    kubernetesVersion: v1.23.6
    imageRepository: artifactorycn.netcracker.com:17099
    networking:
      dnsDomain: cluster.local
      podSubnet: 10.128.0.0/14
      serviceSubnet: 172.30.0.0/16
    apiServer:
      extraArgs:
        enable-admission-plugins: NodeRestriction,PodNodeSelector
        max-requests-inflight: "399"
    etcd:
      local:
        extraArgs:
          snapshot-count: "12001"
  kubeadm_kubelet:
    cgroupDriver: systemd
  cri:
    containerRuntime: containerd
    containerdConfig:
      plugins."io.containerd.grpc.v1.cri":
        sandbox_image: artifactorycn.netcracker.com:17099/pause:3.6
      plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc:
        runtime_type: io.containerd.runc.v2
      plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options:
        SystemdCgroup: true
      plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io":
        endpoint:
        - https://artifactorycn.netcracker.com:17099
  resolv.conf:
    nameservers:
    - 10.112.1.137
    - 10.112.1.1
    - 10.112.1.2
  ntp:
    chrony:
      servers:
      - 10.112.1.137 iburst
      - 10.112.1.1 iburst
      - 10.112.1.2 iburst
  packages:
    package_manager:
      replace-repositories: true
      repositories:
        epel7-yumsrv:
          name: "CentOS 7 Epel"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/misc/epel/7/x86_64/"
        os7-yumsrv:
          name: "CentOS 7 OS"
          exclude: "gluster*"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/CentOS/7/os/x86_64/"
        updates7-yumsrv:
          name: "CentOS 7 Updates"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/CentOS/7/updates/x86_64"
        extras7-yumsrv:
          name: "CentOS 7 Extras"
          exclude: "etcd"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/CentOS/7/extras/x86_64"
        sclo7-rh-yumsrv:
          name: "CentOS 7 SCLo/rh"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/CentOS/7/sclo/x86_64/rh"
        docker-ce:
          name: "CentOS 7 Docker-CE"
          enabled: 1
          gpgcheck: 0
          baseurl: "http://yumsrv03cn.netcracker.com/yum/docker-ce/centos"

#  packages:
#    install:
#    - ethtool
#      - ebtables
#      - socat
#      - curl
#      - openssl
#      - unzip
#      - tcpdump
#      - lsof
#      - strace
#      - iotop
#      - policycoreutils-python
#      - conntrack-tools
#      - jq
#      - bash-completion
#      - containerd.io-1.4.3-3.1*

  sysctl:
    vm.max_map_count: 262144
    kernel.pid_max: 4194304

#  selinux:
#    state: enforcing
#    policy: targeted
#    permissive:
#    - haproxy_t
#    - container_t
#    - keepalived_t

  thirdparties:
    /usr/bin/kubeadm:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/kubernetes/kubeadm/{{
        services.kubeadm.kubernetesVersion }}/bin/linux/amd64/kubeadm
    /usr/bin/kubelet:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/kubernetes/kubelet/{{
        services.kubeadm.kubernetesVersion }}/bin/linux/amd64/kubelet
    /opt/cni/cni-plugins-linux.tgz:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/containernetworking/plugins/v0.9.0/cni-plugins-linux-amd64-v0.9.0.tgz
    /usr/bin/kubectl:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/kubernetes/kubectl/{{
        services.kubeadm.kubernetesVersion }}/bin/linux/amd64/kubectl
    /usr/bin/calicoctl:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/projectcalico/calico/{{
        plugins.calico.version }}/calicoctl-linux-amd64
    /usr/bin/crictl.tar.gz:
      source: https://artifactorycn.netcracker.com/nc.thirdparty.files/kubernetes-sigs/cri-tools/{{
        globals.compatibility_map.software.crictl[services.kubeadm.kubernetesVersion].version
        }}/crictl-{{ globals.compatibility_map.software.crictl[services.kubeadm.kubernetesVersion].version
        }}-linux-amd64.tar.gz

rbac:
  accounts:
  - name: admin
    role: cluster-admin

plugins:
  nginx-ingress-controller:
    install: true
    installation:
      registry: artifactorycn.netcracker.com:17099

  kubernetes-dashboard:
    install: true


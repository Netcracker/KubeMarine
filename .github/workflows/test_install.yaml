name: Test Installation
on:
  push:
    branches:
      - '**'

jobs:
  collect_kubernetes_versions:
    runs-on: ubuntu-22.04
    outputs:
      kuber_versions: ${{ steps.versions.outputs.kuber_versions }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install software
        run: pip3 install yq
      - name: Parse kubernetes versions
        id: versions
        run: |
          versions=$(cat ./kubemarine/resources/configurations/globals.yaml | \
            python3 -m yq -c '.compatibility_map.software.kubeadm | keys')
          echo Parsed versions: $versions
          echo "kuber_versions=$versions" >> $GITHUB_OUTPUT

  test-default-installation:
    runs-on: ubuntu-22.04
    needs: collect_kubernetes_versions
    env:
      cluster_yaml_file: ./ci/default_cluster.yaml
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version: ${{ fromJSON(needs.collect_kubernetes_versions.outputs.kuber_versions) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Check ips
        run: ip a
      - name: Ssh preparation
        run: |
          ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa -q
          cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys
          ssh-keyscan -H 172.17.0.1 >> ~/.ssh/known_hosts
      - name: Test ssh connection
        run: ssh -i ~/.ssh/id_rsa 172.17.0.1 echo "Test"
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Kubemarine with dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Remove moby-runc to resolve conflicts
        run: sudo apt remove moby-runc
      - name: Install rename
        run: sudo apt install rename
         # TODO: change to kubemarine runtime values feature
      - name: Set kubernetes version to cluster.yaml
        run: sed -i "s/<KUBERNETES_VERSION>/${{ matrix.kubernetes-version }}/" ${{ env.cluster_yaml_file }}
      - name: Check Iaas
        id: test_check_iaas
        run: kubemarine check_iaas -c ${{ env.cluster_yaml_file }}  --dump-location ./results/check_iaas_dump/
      - name: Install
        id: test_install
        run: kubemarine install -c ${{ env.cluster_yaml_file }} --disable-cumulative-points --dump-location ./results/install_dump/
      - name: Check paas
        id: test_check_paas
        run: kubemarine check_paas -c ${{ env.cluster_yaml_file }} --dump-location ./results/check_paas_dump/
      - name: Change not-recommended symbols in dump files
        if: failure()
        run: rename 's/[:]/_/g' ./results/*/dump/*
      - name: Collect dump artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: default_cluster_procedure_dumps-${{ matrix.kubernetes-version }}
          path: ./results/
          retention-days: 7

  test-extended-installation:
    runs-on: ubuntu-22.04
    env:
      cluster_yaml_file: ./ci/extended_cluster.yaml
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Check ips
        run: ip a
      - name: Ssh preparation
        run: |
          ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa -q
          cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys
          ssh-keyscan -H 172.17.0.1 >> ~/.ssh/known_hosts
      - name: Add ip alias
        run: sudo ifconfig docker0:0 172.17.1.1 up
      - name: Test ssh connection
        run: ssh -i ~/.ssh/id_rsa 172.17.0.1 echo "Test"
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Kubemarine with dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
      - name: Remove moby-runc to resolve conflicts
        run: sudo apt remove moby-runc
      - name: Install rename
        run: sudo apt install rename
      - name: Check Iaas
        id: test_check_iaas
        run: kubemarine check_iaas -c ${{ env.cluster_yaml_file }} --dump-location ./results/check_iaas_dump/
      - name: Install
        id: test_install
        run: kubemarine install -c ${{ env.cluster_yaml_file }} --disable-cumulative-points --dump-location ./results/install_dump/
      - name: Check paas
        id: test_check_paas
        run: kubemarine check_paas -c ${{ env.cluster_yaml_file }} --dump-location ./results/check_paas_dump/
      - name: Change not-recommended symbols in dump files
        if: failure()
        run: rename 's/[:]/_/g' ./results/*/dump/*
      - name: Collect dump artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: extended_cluster_procedure_dumps
          path: ./results/
          retention-days: 7

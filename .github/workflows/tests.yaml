name: Tests and Validations
on:
  push:
    branches:
      - '**'
env:
   COPYRIGHT_COMPANY: 'NetCracker Technology Corporation'
   COPYRIGHT_YEAR: '2021-2022'
jobs:
  license:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
       - run: docker run -v "${PWD}:/src" -i ghcr.io/google/addlicense -v -c "${{ env.COPYRIGHT_COMPANY }}" -y "${{ env.COPYRIGHT_YEAR }}" $(find . -type f -name "*.py" | xargs echo)
       # This currently not works for protected branches,
       # but all pushes to them should be done through PRs that already contain inserted license.
       - uses: stefanzweifel/git-auto-commit-action@v4
         with:
           commit_message: Auto-update license header
  selftest-image:
    needs: license
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: docker build -t kubemarine --no-cache .
      - name: Run Selftest
        # selftest of image internally runs selftest of package
        run: docker run kubemarine selftest
  selftest-binary:
    needs: license
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Build Binary via Docker
        run: |
          docker build -t kubemarine --build-arg BUILD_TYPE=binary --no-cache .
          CONTAINER_ID=$(docker create kubemarine)
          docker cp "${CONTAINER_ID}:/opt/kubemarine/dist/kubemarine" kubemarine_exe
          docker rm -v "${CONTAINER_ID}"
      - name: Run Selftest
        run: ./kubemarine_exe selftest

  unit-tests:
    needs: license
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build -t kubemarine --build-arg BUILD_TYPE=test --no-cache .
      - run: docker run --entrypoint=python3 kubemarine -m unittest discover -s /opt/kubemarine/test/unit -t /opt/kubemarine/test/unit
  coverage:
    needs: license
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      # Install coverage and kubemarine with all dependencies except ansible.
      # Then uninstall only kubemarine to avoid ambiguity and to surely run coverage on sources.
      - run: pip install coverage . && pip uninstall -y kubemarine
      - run: coverage run -m unittest discover -s test/unit -t test/unit; coverage report -m
  linter:
    needs: license
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      # Install pylint and kubemarine with all dependencies except ansible.
      # Then uninstall only kubemarine to avoid ambiguity and to surely run pylint on sources.
      - run: pip install pylint . && pip uninstall -y kubemarine
      - run: pylint kubemarine test --disable fixme || exit 0
